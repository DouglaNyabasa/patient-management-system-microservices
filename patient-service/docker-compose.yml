#version: '3.8'
#
#services:
#  patient-service-db:
#    image: postgres:latest
#    container_name: patient-service-db
#    environment:
#      POSTGRES_DB: patientserviceDB
#      POSTGRES_USER: admin_user
#      POSTGRES_PASSWORD: password
#    ports:
#      - "5432:5432"
#    networks:
#      - internal
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - internal
#
#  kafka:
#    image: bitnami/kafka:latest
#    container_name: kafka
#    ports:
#      - "9092:9092"
#      - "9094:9094"
#    environment:
#      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
#      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
#      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
#      KAFKA_CFG_NODE_ID: '0'
#      KAFKA_CFG_PROCESS_ROLES: controller,broker
#    networks:
#      - internal
#
#  patient-service:
#    image: patient-service
#    container_name: patient-service
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/patientserviceDB
#      SPRING_DATASOURCE_USERNAME: admin_user
#      SPRING_DATASOURCE_PASSWORD: password
#    ports:
#      - "4000:4000"  # Expose the Spring Boot application port
#    depends_on:
#      - patient-service-db  # Ensure the database starts first
#    networks:
#      - internal
#
#networks:
#  internal:


version: '3.8'

services:
  billing-service:
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "8080:8080"
      - "9001:9001"  # This exposes the gRPC port
    networks:
      - internal

  patient-service-db:
    image: postgres:latest
    container_name: patient-service-db
    environment:
      POSTGRES_DB: patientserviceDB
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - internal

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - internal

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: '0'
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    networks:
      - internal

  patient-service:
    image: patient-service
    container_name: patient-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/patientserviceDB
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "4000:4000"  # Expose the Spring Boot application port
      - "9090:9090"  # Expose the gRPC port
    depends_on:
      - patient-service-db  # Ensure the database starts first
    networks:
      - internal

networks:
  internal:
